package com.yourcompany.mortgage.mapper;

import com.yourcompany.mortgage.dto.*;
import com.yourcompany.mortgage.model.*;
import org.mapstruct.*;

/**
 * Mapper interface for converting between DTOs and Entities
 * Generated by MapStruct for efficient object mapping
 */
@Mapper(componentModel = "spring", 
        nullValuePropertyMappingStrategy = NullValuePropertyMappingStrategy.IGNORE,
        unmappedTargetPolicy = ReportingPolicy.IGNORE,
        uses = {})
public interface LoanApplicationMapper {

    // Main application mapping
    @Mapping(target = "borrowers", ignore = true)
    @Mapping(target = "liabilities", ignore = true)
    @Mapping(target = "documents", ignore = true)
    @Mapping(target = "createdDate", ignore = true)
    @Mapping(target = "updatedDate", ignore = true)
    @Mapping(target = "applicationNumber", ignore = true)
    LoanApplication toEntity(LoanApplicationDTO dto);
    
    @Mapping(target = "borrowers", ignore = true)
    @Mapping(target = "liabilities", ignore = true)
    LoanApplicationDTO toDTO(LoanApplication entity);

    // Property mapping
    @Mapping(target = "application", ignore = true)
    Property toEntity(PropertyDTO dto);
    
    PropertyDTO toDTO(Property entity);

    // Borrower mapping
    @Mapping(target = "application", ignore = true)
    @Mapping(target = "employmentHistory", ignore = true)
    @Mapping(target = "incomeSources", ignore = true)
    @Mapping(target = "residences", ignore = true)
    @Mapping(target = "reoProperties", ignore = true)
    @Mapping(target = "assets", ignore = true)
    @Mapping(target = "declaration", ignore = true)
    Borrower toEntity(BorrowerDTO dto);
    
    @Mapping(target = "employmentHistory", ignore = true)
    @Mapping(target = "incomeSources", ignore = true)
    @Mapping(target = "residences", ignore = true)
    @Mapping(target = "reoProperties", ignore = true)
    @Mapping(target = "assets", ignore = true)
    @Mapping(target = "declaration", ignore = true)
    BorrowerDTO toDTO(Borrower entity);

    // Employment mapping
    @Mapping(target = "borrower", ignore = true)
    Employment toEntity(EmploymentDTO dto);
    
    EmploymentDTO toDTO(Employment entity);

    // Income source mapping
    @Mapping(target = "borrower", ignore = true)
    IncomeSource toEntity(IncomeSourceDTO dto);
    
    IncomeSourceDTO toDTO(IncomeSource entity);

    // Residence mapping
    @Mapping(target = "borrower", ignore = true)
    Residence toEntity(ResidenceDTO dto);
    
    ResidenceDTO toDTO(Residence entity);

    // Liability mapping
    @Mapping(target = "application", ignore = true)
    Liability toEntity(LiabilityDTO dto);
    
    LiabilityDTO toDTO(Liability entity);

    // REO Property mapping
    @Mapping(target = "borrower", ignore = true)
    REOProperty toEntity(REOPropertyDTO dto);
    
    REOPropertyDTO toDTO(REOProperty entity);

    // Declaration mapping
    @Mapping(target = "borrower", ignore = true)
    Declaration toEntity(DeclarationDTO dto);
    
    DeclarationDTO toDTO(Declaration entity);

    // Note: Complex relationship mappings will be handled in service layer
    // MapStruct works best with simple DTO to Entity mappings
}
